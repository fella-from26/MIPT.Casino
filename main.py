import time


import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton


import messages
from bandit import Bandit
from blackjack import Blackjack


# —Å–æ–∑–¥–∞—é –±–æ—Ç–∞
bot = telebot.TeleBot("6259702528:AAE4CsmMuuhdDgc0ibwgpMH8nWoRGrE_w90")
# –∏–≥—Ä—ã –∏ –±–∞–ª–∞–Ω—Å—ã
bandit_game = Bandit()  # –æ–±—â–∏–π –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Ç–∞–∫ –∫–∞–∫ –∫–æ–ø–∏—Ç—Å—è –æ–±—â–∏–π –¥–∂–µ–∫–ø–æ—Ç
blackjack_games = dict()  # —Å–ª–æ–≤–∞—Ä—å (id —á–∞—Ç–∞: –∏–≥—Ä–∞, –∑–∞–ø—É—â–µ–Ω–Ω–∞—è –≤ –Ω—ë–º)
balances = dict()  # —Å–ª–æ–≤–∞—Ä—å (id —á–∞—Ç–∞: –±–∞–ª–∞–Ω—Å)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_message(message):
    # –°–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton(text="üé∞", callback_data="start - bandit")
    button2 = InlineKeyboardButton(text="üÉè", callback_data="start - blackjack_single")
    button3 = InlineKeyboardButton(text="üÉèüÉèüÉè", callback_data="start - blackjack_multi")
    keyboard.add(button1, button2, button3)

    # –û—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.send_message(chat_id=message.chat.id, text=messages.games, reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /deposit
@bot.message_handler(commands=['deposit'])
def deposit(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:")
    bot.register_next_step_handler(message, input_money, "deposit")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /balance
@bot.message_handler(commands=['balance'])
def balance(message):
    try:
        bot.send_message(message.chat.id, f"–í–∞—à –±–∞–ª–∞–Ω—Å: {balances[message.chat.id]}.")
    except KeyError:
        balances[message.chat.id] = 0
        bot.send_message(message.chat.id, f"–í–∞—à –±–∞–ª–∞–Ω—Å: {0}.")


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫:
# start
@bot.callback_query_handler(func=lambda call: call.data.startswith("start"))
def callback_query(call):
    bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=None)

    if call.data.endswith("blackjack_single"):
        bot.edit_message_text(text="–ë–ª—ç–∫–¥–∂—ç–∫! –ü–æ–≥–Ω–∞–ª–∏!", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        init_blackjack_single(call.message)
    elif call.data.endswith("blackjack_multi"):
        bot.edit_message_text(text="–ú–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –µ—â—ë –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        start_message(call.message)
    elif call.data.endswith("bandit"):
        bot.edit_message_text(text="–û–¥–Ω–æ—Ä—É–∫–∏–π –ë–∞–Ω–¥–∏—Ç! –ü–æ–≥–Ω–∞–ª–∏!", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        init_bandit(call.message)


# bandit
@bot.callback_query_handler(func=lambda call: call.data.startswith("bandit"))
def callback_query(call):
    bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=None)

    if call.data.endswith("yes"):
        bot.edit_message_text(text="–°—ã–≥—Ä–∞–µ—Ç–µ —Å–Ω–æ–≤–∞? -–î–∞.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        init_bandit(call.message)
    elif call.data.endswith("no"):
        bot.edit_message_text(text="–°—ã–≥—Ä–∞–µ—Ç–µ —Å–Ω–æ–≤–∞? -–ù–µ—Ç.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        start_message(call.message)


# blackjack_single
@bot.callback_query_handler(func=lambda call: call.data.startswith("blackjack_single"))
def callback_query(call):
    bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=None)

    # –≤—ã–±–∏—Ä–∞—é –∏–≥—Ä—É –∏ –∏–≥—Ä–æ–∫–∞:
    key = call.message.chat.id
    game = blackjack_games[key]
    player = game.players[0]

    if call.data.endswith("hit"):
        bot.edit_message_text(text="–í—ã –≤–∑—è–ª–∏ –∫–∞—Ä—Ç—É.", chat_id=call.message.chat.id, message_id=call.message.message_id)
        game.hit(player)  # –¥–∞—é –∫–∞—Ä—Ç—É –Ω—É–∂–Ω–æ–º—É –∏–≥—Ä–æ–∫—É –∏–∑ –Ω—É–∂–Ω–æ–π –∏–≥—Ä—ã

    elif call.data.endswith("stop"):
        bot.edit_message_text(text="–í—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å.", chat_id=call.message.chat.id, message_id=call.message.message_id)
        player.stop()  # –∏–≥—Ä–æ–∫ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç –Ω–∞–±–æ—Ä

    elif call.data.endswith("yes"):
        bot.edit_message_text(text="–°—ã–≥—Ä–∞–µ—Ç–µ —Å–Ω–æ–≤–∞? -–î–∞.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        init_blackjack_single(call.message)

    elif call.data.endswith("no"):
        bot.edit_message_text(text="–°—ã–≥—Ä–∞–µ—Ç–µ —Å–Ω–æ–≤–∞? -–ù–µ—Ç.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        start_message(call.message)

    elif call.data.endswith("no risk"):
        bot.edit_message_text(text=f"{messages.decision} –∑–∞–±—Ä–∞—Ç—å.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        player.take()
    elif call.data.endswith("risk"):
        bot.edit_message_text(text=f"{messages.decision} –∏–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        player.wait()


# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è "–û–¥–Ω–æ—Ä—É–∫–æ–≥–æ –ë–∞–Ω–¥–∏—Ç–∞"
def init_bandit(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É:")
    bot.register_next_step_handler(message, input_money, "bandit")


# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–ª—ç–∫–¥–∂—ç–∫–∞ –Ω–∞ –æ–¥–Ω–æ–≥–æ
def init_blackjack_single(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É:")
    bot.register_next_step_handler(message, input_money, "blackjack_single")


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è —Å—Ç–∞–≤–∫–∏, –≤–≤–µ–¥—ë–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
def input_money(message, target):
    if message.text[0] == '0':
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –±–µ–∑ –≤–µ–¥—É—â–∏—Ö –Ω—É–ª–µ–π.")
        bot.register_next_step_handler(message, input_money, target)
        return

    try:  # –ø—Ä–æ–±—É—é —Å—á–∏—Ç–∞—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—É—é —Å—É–º–º—É
        amount = int(message.text)
        if amount <= 0:
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.")
            bot.register_next_step_handler(message, input_money, target)
            return

        try:  # –ø—Ä–æ–±—É—é –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –±–∞–ª–∞–Ω—Å—É –∏ —Å–æ–∑–¥–∞—é –µ–≥–æ, –µ—Å–ª–∏ –æ–Ω –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω
            if target == "bandit":
                if amount > balances[message.chat.id]:
                    bot.send_message(message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.")
                else:
                    bot.send_message(message.chat.id, f"–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: {amount}.")
                    balances[message.chat.id] -= amount
                    spin(message, amount)

            elif target == "blackjack_single":
                if amount > balances[message.chat.id]:
                    bot.send_message(message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.")
                else:
                    balances[message.chat.id] -= amount
                    blackjack_single(message, amount)

            elif target == "deposit":
                balances[message.chat.id] += amount  # –ø–æ–ø–æ–ª–Ω—è—é –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                bot.send_message(message.chat.id, f"–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {amount}.")

        except KeyError:
            if target == "deposit":
                balances[message.chat.id] = amount  # —Å–æ–∑–¥–∞—é –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                bot.send_message(message.chat.id, f"–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {amount}.")
            else:
                balances[message.chat.id] = 0
                bot.send_message(message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.")

    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.")
        bot.register_next_step_handler(message, input_money, target)


# —Ñ—É–Ω–∫—Ü–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å—ã–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞
def play_again(message, game_name):
    keyboard = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton(text="–¥–∞", callback_data=game_name + " - yes")
    button2 = InlineKeyboardButton(text="–Ω–µ—Ç", callback_data=game_name + " - no")
    keyboard.add(button1, button2)
    bot.send_message(chat_id=message.chat.id, text="–°—ã–≥—Ä–∞–µ—Ç–µ —Å–Ω–æ–≤–∞?", reply_markup=keyboard)


# –≤—Ä–∞—â–µ–Ω–∏–µ "–û–¥–Ω–æ—Ä—É–∫–æ–≥–æ –ë–∞–Ω–¥–∏—Ç–∞"
def spin(message, bet):
    combination, win = bandit_game.spin(bet)
    if win != 0:
        bot.send_message(message.chat.id, f"{combination}")
        bot.send_message(message.chat.id, f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {win}!")
        balances[message.chat.id] += win
    else:
        bot.send_message(message.chat.id, f"{combination}")
        bot.send_message(message.chat.id, f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.")

    play_again(message, "bandit")


# —Ä–∞–∑–¥–∞—á–∞ –±–ª—ç–∫–¥–∂–µ–∫–∞ –Ω–∞ –æ–¥–Ω–æ–≥–æ
def blackjack_single(message, bet):
    # –≤—ã–±–∏—Ä–∞—é –∏–≥—Ä—É –∏ –∏–≥—Ä–æ–∫–∞:
    key = message.chat.id
    game = Blackjack([(key, bet)])
    blackjack_games[key] = game
    player = game.players[0]
    croupier = game.croupier

    # –Ω–∞—á–∏–Ω–∞—é —Ä–∞–∑–¥–∞—á—É:
    game.deal()
    bot.send_message(chat_id=message.chat.id, text=game.get_current_state())
    while player.status == "in_game":  # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –¥–µ–π—Å—Ç–≤–∏—è –∏–≥—Ä–æ–∫–∞
        action(message)
        player.is_thinking = True
        while player.is_thinking:
            time.sleep(1)
        if player.status != "stop":
            bot.send_message(chat_id=message.chat.id, text=game.get_current_state())

    # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–º–Ω–æ–≥–æ if-–æ–≤, –º–æ–∂–Ω–æ –Ω–µ –≤–Ω–∏–∫–∞—Ç—å)
    if player.status == "lose":  # –ø–µ—Ä–µ–±–æ—Ä —É –∏–≥—Ä–æ–∫–∞
        bot.send_message(message.chat.id, f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.")
        play_again(message, "blackjack_single")

    elif player.has_blackjack:  # –±–ª—ç–∫–¥–∂–µ–∫ —É –∏–≥—Ä–æ–∫–∞
        if croupier.score < 10:  # —Ç–æ—á–Ω–æ –Ω–µ—Ç –±–ª—ç–∫–¥–∂–µ–∫–∞ —É –∫—Ä—É–ø—å–µ
            bot.send_message(message.chat.id, f"–ë–ª—ç–∫–¥–∂–µ–∫! –í—ã –ø–æ–±–µ–¥–∏–ª–∏!")
            bot.send_message(message.chat.id, f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {(player.bet * 5 + 1) // 2}!")
            balances[message.chat.id] += (player.bet * 5 + 1) // 2
            play_again(message, "blackjack_single")
        else:  # –≤–æ–∑–º–æ–∂–Ω—ã–π –±–ª—ç–∫–¥–∂–µ–∫ —É –∫—Ä—É–ø—å–µ
            # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ä–µ—à–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞:
            choice(message)
            player.is_thinking = True
            while player.is_thinking:
                time.sleep(1)

            if player.status == "take":
                bot.send_message(message.chat.id, f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {player.bet * 2}!")
                balances[message.chat.id] += player.bet * 2
                play_again(message, "blackjack_single")
            elif player.status == "wait":
                game.croupier_finish()
                bot.send_message(chat_id=message.chat.id, text=game.get_current_state())

                if croupier.has_blackjack:
                    bot.send_message(message.chat.id, f"–í—ã –æ—Å—Ç–∞–ª–∏—Å—å –ø—Ä–∏ —Å–≤–æ—ë–º: {player.bet}.")
                    balances[message.chat.id] += player.bet
                    play_again(message, "blackjack_single")
                else:
                    bot.send_message(message.chat.id, f"–í—ã –ø–æ–±–µ–¥–∏–ª–∏!")
                    bot.send_message(message.chat.id, f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {(player.bet * 5 + 1) // 2}!")
                    balances[message.chat.id] += (player.bet * 5 + 1) // 2
                    play_again(message, "blackjack_single")

    else:  # —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ —É –∏–≥—Ä–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –Ω–∞–±–æ—Ä –∫–∞—Ä—Ç –∏ –∫—Ä—É–ø—å–µ –Ω–∞—á–∏–Ω–∞–µ—Ç –Ω–∞–±–∏—Ä–∞—Ç—å
        game.croupier_finish()
        bot.send_message(chat_id=message.chat.id, text=game.get_current_state())
        if croupier.has_blackjack:
            bot.send_message(message.chat.id, f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ - —É –∫—Ä—É–ø—å–µ –±–ª—ç–∫–¥–∂–µ–∫.")
            play_again(message, "blackjack_single")
        elif (croupier.score < player.score) or (croupier.score > 21):
            bot.send_message(message.chat.id, f"–í—ã –ø–æ–±–µ–¥–∏–ª–∏!")
            bot.send_message(message.chat.id, f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {player.bet * 2}!")
            balances[message.chat.id] += player.bet * 2
            play_again(message, "blackjack_single")
        elif croupier.score == player.score:
            bot.send_message(message.chat.id, f"–ù–∏—á—å—è")
            bot.send_message(message.chat.id, f"–í—ã –æ—Å—Ç–∞–ª–∏—Å—å –ø—Ä–∏ —Å–≤–æ—ë–º: {player.bet}.")
            balances[message.chat.id] += player.bet
            play_again(message, "blackjack_single")
        else:
            bot.send_message(message.chat.id, f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.")
            play_again(message, "blackjack_single")


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤—ã–±–æ—Ä–æ–º –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –Ω–∞–±–æ—Ä–µ –∫–∞—Ä—Ç –∏–≥—Ä–æ–∫–æ–º
def action(message):
    keyboard = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton(text="–≤–∑—è—Ç—å –∫–∞—Ä—Ç—É", callback_data="blackjack_single - hit")
    button2 = InlineKeyboardButton(text="–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è", callback_data="blackjack_single - stop")
    keyboard.add(button1, button2)
    bot.send_message(chat_id=message.chat.id, text="–î–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤—ã–±–æ—Ä–æ–º –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –±–ª—ç–∫–¥–∂–µ–∫–µ —É –∏–≥—Ä–æ–∫–∞
def choice(message):
    keyboard = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton(text="–∑–∞–±—Ä–∞—Ç—å —Å–µ–π—á–∞—Å", callback_data="blackjack_single - no risk")
    button2 = InlineKeyboardButton(text="–∏–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ", callback_data="blackjack_single - risk")
    keyboard.add(button1, button2)
    bot.send_message(chat_id=message.chat.id, text=messages.decision, reply_markup=keyboard)


# –∑–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞
bot.polling()
