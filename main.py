import random
import time

from dotenv import load_dotenv
import telebot
from telebot.types import (InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup,
                           ReplyKeyboardRemove)
from moviepy.editor import *

from bandit import Bandit
from blackjack import Blackjack
import messages
import db


# —Å–æ–∑–¥–∞—é –±–æ—Ç–∞, —Å–∫—Ä—ã–≤–∞—è —Ç–æ–∫–µ–Ω
load_dotenv()
bot = telebot.TeleBot(os.getenv('TOKEN'))
BotDB = db.BotDB()

# –¥–∞–Ω–Ω—ã–µ
bandit_game = Bandit()  # –æ–±—â–∏–π –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Ç–∞–∫ –∫–∞–∫ –∫–æ–ø–∏—Ç—Å—è –æ–±—â–∏–π –¥–∂–µ–∫–ø–æ—Ç
chat_data = dict()  # —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —á–∞—Ç–æ–≤


def set_cancel_keyboard(chat_id, text):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–æ–¥–∞"""

    cancel_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)

    button_start = KeyboardButton(text="–æ—Ç–º–µ–Ω–∞")
    cancel_keyboard.add(button_start)

    bot.send_message(chat_id=chat_id, text=text, reply_markup=cancel_keyboard)


def set_default_keyboard(chat_id, text):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –±–∞–∑–æ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π:"""

    default_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)

    button_start = KeyboardButton(text="–≤—ã–±—Ä–∞—Ç—å –∏–≥—Ä—É")
    button_balance = KeyboardButton(text="—É–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å")
    button_deposit = KeyboardButton(text="–ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å")
    default_keyboard.add(button_start)
    default_keyboard.add(button_balance, button_deposit)

    bot.send_message(chat_id=chat_id, text=text, reply_markup=default_keyboard)


def get_chat_data(key):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –¥–∞–Ω–Ω—ã–º —á–∞—Ç–∞"""

    if chat_data.get(key) is None:
        chat_data[key] = {'start_message': None, 'blackjack_table': None, "roulette": None}

    return chat_data[key]


@bot.message_handler(commands=['start'])
def start_message(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –≤—ã–±–æ—Ä–æ–º –∏–≥—Ä"""

    # –¥–æ–±–∞–≤–ª—è—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    key = message.chat.id
    if not BotDB.user_exists(key):
        BotDB.add_user(key)

    # —É–¥–∞–ª—è—é –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –∏–≥—Ä, —Ç–µ–º —Å–∞–º—ã–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—è –µ–≥–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å:
    if get_chat_data(key)['start_message'] is not None:
        bot.delete_message(chat_id=message.chat.id, message_id=chat_data[key]['start_message'].id)

    # –û—Ç–ø—Ä–∞–≤–ª—è—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π:
    set_default_keyboard(message.chat.id, messages.intro)

    # –°–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∏–≥—Ä:
    keyboard = InlineKeyboardMarkup()
    button_game1 = InlineKeyboardButton(text="üé∞", callback_data="start - bandit")
    button_game2 = InlineKeyboardButton(text="üÉè", callback_data="start - blackjack")
    button_game3 = InlineKeyboardButton(text="üü•‚¨õÔ∏è", callback_data="start - roulette")
    keyboard.add(button_game1, button_game2, button_game3)

    # –û—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –∏–≥—Ä, —Å–æ—Ö—Ä–∞–Ω—è—è
    get_chat_data(key)['start_message'] = bot.send_message(chat_id=message.chat.id, text=messages.games,
                                                           reply_markup=keyboard)


@bot.message_handler(content_types=['text'])
def handle_text(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞"""

    if message.text == "–≤—ã–±—Ä–∞—Ç—å –∏–≥—Ä—É":
        start_message(message)

    elif message.text == "–ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å":
        set_cancel_keyboard(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:")
        bot.register_next_step_handler(message, input_money, "deposit")

    elif message.text == "—É–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å":
        bot.send_message(message.chat.id, f"–í–∞—à –±–∞–ª–∞–Ω—Å: {BotDB.get_balance(message.chat.id)}.")


@bot.callback_query_handler(func=lambda call: call.data.startswith("start"))
def callback_query(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–±–æ—Ä–æ–º –∏–≥—Ä"""

    # —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –∑–∞–ø—É—Å–∫–æ–º –∏–≥—Ä:
    key = call.message.chat.id
    if get_chat_data(key)['start_message'] is not None:
        if call.message.message_id != get_chat_data(key)['start_message'].id:
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
            return

    # —É–±–∏—Ä–∞—é –∫–Ω–æ–ø–∫–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø–µ—Ä–µ—Å—Ç–∞—é —Å—á–∏—Ç–∞—Ç—å –µ–≥–æ —Å—Ç–∞—Ä—Ç–æ–≤—ã–º:
    bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=None)
    get_chat_data(key)['start_message'] = None

    # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é callback data:
    if call.data.endswith("blackjack"):
        bot.edit_message_text(text="–ë–ª—ç–∫–¥–∂—ç–∫! –ü–æ–≥–Ω–∞–ª–∏!", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        init_game(call.message, "blackjack")

    elif call.data.endswith("roulette"):
        bot.edit_message_text(text="–†—É–ª–µ—Ç–∫–∞! –ü–æ–≥–Ω–∞–ª–∏!", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        init_game(call.message, "roulette")

    elif call.data.endswith("bandit"):
        bot.edit_message_text(text="–û–¥–Ω–æ—Ä—É–∫–∏–π –ë–∞–Ω–¥–∏—Ç! –ü–æ–≥–Ω–∞–ª–∏!", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        init_game(call.message, "bandit")


@bot.callback_query_handler(func=lambda call: call.data.startswith("bandit"))
def callback_query(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –∏–∑ '–û–¥–Ω–æ—Ä—É–∫–æ–≥–æ –ë–∞–Ω–¥–∏—Ç–∞'"""

    # —É–±–∏—Ä–∞—é –∫–Ω–æ–ø–∫–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=None)

    # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é callback data:
    if call.data.endswith("yes"):
        bot.edit_message_text(text="–°—ã–≥—Ä–∞–µ—Ç–µ —Å–Ω–æ–≤–∞?\n- –î–∞.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        init_game(call.message, "bandit")

    elif call.data.endswith("no"):
        bot.edit_message_text(text="–°—ã–≥—Ä–∞–µ—Ç–µ —Å–Ω–æ–≤–∞?\n- –ù–µ—Ç.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        start_message(call.message)

    elif call.data.endswith("same"):
        bot.edit_message_text(text="–°—ã–≥—Ä–∞–µ—Ç–µ —Å–Ω–æ–≤–∞?\n- –î–∞, —Å —Ç–æ–π –∂–µ —Å—Ç–∞–≤–∫–æ–π.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        spin(call.message, int(call.data.split('#')[0].split('-')[1]))


@bot.callback_query_handler(func=lambda call: call.data.startswith("blackjack"))
def callback_query(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –∏–∑ –±–ª—ç–∫–¥–∂–µ–∫–∞"""

    # —É–¥–∞–ª—è—é –∫–Ω–æ–ø–∫–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è:
    bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=None)

    # —Ñ–∏–∫—Å–∏—Ä—É—é —Å—Ç–æ–ª –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:
    key = call.message.chat.id
    game = get_chat_data(key)['blackjack_table']
    player = game.player

    # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é callback data:
    if call.data.endswith("hit"):
        bot.edit_message_text(text="–í–∞—à —Ö–æ–¥.\n- –ï—â—ë!", chat_id=call.message.chat.id, message_id=call.message.message_id)
        game.hit(player)  # –¥–∞—é –∫–∞—Ä—Ç—É –Ω—É–∂–Ω–æ–º—É –∏–≥—Ä–æ–∫—É –∏–∑ –Ω—É–∂–Ω–æ–π –∏–≥—Ä—ã

    elif call.data.endswith("stop"):
        bot.edit_message_text(text="–í–∞—à —Ö–æ–¥.\n- –°–µ–±–µ.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        player.stop()  # –∏–≥—Ä–æ–∫ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç –Ω–∞–±–æ—Ä

    elif call.data.endswith("no risk"):
        bot.edit_message_text(text=f"{messages.decision} –∑–∞–±—Ä–∞—Ç—å.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        player.take()  # –∏–≥—Ä–æ–∫ –∑–∞–±–∏—Ä–∞–µ—Ç –±–ª—ç–∫–¥–∂–µ–∫ 1 –∫ 1

    elif call.data.endswith("risk"):
        bot.edit_message_text(text=f"{messages.decision} –∏–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        player.wait()  # –∏–≥—Ä–æ–∫ –∂–¥—ë—Ç –≤—Å–∫—Ä—ã—Ç–∏—è –¥–∏–ª–ª–µ—Ä–∞

    elif call.data.endswith("yes"):
        bot.edit_message_text(text="–°—ã–≥—Ä–∞–µ—Ç–µ —Å–Ω–æ–≤–∞?\n- –î–∞.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        init_game(call.message, "blackjack")

    elif call.data.endswith("no"):
        bot.edit_message_text(text="–°—ã–≥—Ä–∞–µ—Ç–µ —Å–Ω–æ–≤–∞?\n- –ù–µ—Ç.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        start_message(call.message)

    elif call.data.endswith("same"):
        bot.edit_message_text(text="–°—ã–≥—Ä–∞–µ—Ç–µ —Å–Ω–æ–≤–∞?\n- –î–∞.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        blackjack(call.message, int(call.data.split('#')[0].split('-')[1]))


@bot.callback_query_handler(func=lambda call: call.data.startswith("roulette"))
def callback_query(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –∏–∑ —Ä—É–ª–µ—Ç–∫–∏"""

    # —É–±–∏—Ä–∞—é –∫–Ω–æ–ø–∫–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=None)

    # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é callback data:
    if call.data.endswith("low"):
        bot.edit_message_text(text="–í–∞—à —Ö–æ–¥.\n- –ú–∞–ª—ã–µ.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        get_chat_data(call.message.chat.id)['roulette'] = "low"

    elif call.data.endswith("high"):
        bot.edit_message_text(text="–í–∞—à —Ö–æ–¥.\n- –ë–æ–ª—å—à–∏–µ.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        get_chat_data(call.message.chat.id)['roulette'] = "high"

    elif call.data.endswith("red"):
        bot.edit_message_text(text="–ù–∞ —á—Ç–æ —Å—Ç–∞–≤–∏—Ç–µ?\n- –ö—Ä–∞—Å–Ω–æ–µ.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        get_chat_data(call.message.chat.id)['roulette'] = "red"

    elif call.data.endswith("black"):
        bot.edit_message_text(text="–ù–∞ —á—Ç–æ —Å—Ç–∞–≤–∏—Ç–µ?\n- –ß—ë—Ä–Ω–æ–µ.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        get_chat_data(call.message.chat.id)['roulette'] = "black"

    elif call.data.endswith("even"):
        bot.edit_message_text(text="–ù–∞ —á—Ç–æ —Å—Ç–∞–≤–∏—Ç–µ?\n- –ß—ë—Ç.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        get_chat_data(call.message.chat.id)['roulette'] = "even"

    elif call.data.endswith("odd"):
        bot.edit_message_text(text="–ù–∞ —á—Ç–æ —Å—Ç–∞–≤–∏—Ç–µ?\n- –ù–µ—á–µ—Ç.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        get_chat_data(call.message.chat.id)['roulette'] = "odd"

    elif call.data.endswith("zero"):
        bot.edit_message_text(text="–ù–∞ —á—Ç–æ —Å—Ç–∞–≤–∏—Ç–µ?\n- –ó–µ—Ä–æ.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        get_chat_data(call.message.chat.id)['roulette'] = "zero"

    elif call.data.endswith("yes"):
        bot.edit_message_text(text="–°—ã–≥—Ä–∞–µ—Ç–µ —Å–Ω–æ–≤–∞?\n- –î–∞.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        init_game(call.message, "roulette")

    elif call.data.endswith("no"):
        bot.edit_message_text(text="–°—ã–≥—Ä–∞–µ—Ç–µ —Å–Ω–æ–≤–∞?\n- –ù–µ—Ç.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        start_message(call.message)

    elif call.data.endswith("same"):
        bot.edit_message_text(text="–°—ã–≥—Ä–∞–µ—Ç–µ —Å–Ω–æ–≤–∞?\n- –î–∞, —Å —Ç–æ–π –∂–µ —Å—Ç–∞–≤–∫–æ–π.", chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        roulette(call.message, int(call.data.split('#')[0].split('-')[1]))


def init_game(message, game_name):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä"""

    if BotDB.get_balance(message.chat.id) == 0:
        bot.send_message(message.chat.id, "–ù–µ –ø–æ–≥–Ω–∞–ª–∏... –î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å.")
    else:
        set_cancel_keyboard(message.chat.id, f"–ë–∞–ª–∞–Ω—Å: {BotDB.get_balance(message.chat.id)}.\n\n–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É:")
        bot.register_next_step_handler(message, input_money, game_name)


def input_money(message, target):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è —Å—Ç–∞–≤–∫–∏, –≤–≤–µ–¥—ë–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""

    chat_id = message.chat.id

    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –∏ –æ—Ç–ª–æ–≤ –æ—Ç–º–µ–Ω—ã –≤–≤–æ–¥–∞:
    if message.text[0] == '0':
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –±–µ–∑ –≤–µ–¥—É—â–∏—Ö –Ω—É–ª–µ–π.")
        bot.register_next_step_handler(message, input_money, target)
        return

    try:
        amount = int(message.text)
        if amount <= 0:
            bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –±–µ–∑ –≤–µ–¥—É—â–∏—Ö –Ω—É–ª–µ–π.")
            bot.register_next_step_handler(message, input_money, target)
            return
    except ValueError:
        if message.text == "–æ—Ç–º–µ–Ω–∞":
            set_default_keyboard(chat_id, "üôÑ")
            return

        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –±–µ–∑ –≤–µ–¥—É—â–∏—Ö –Ω—É–ª–µ–π.")
        bot.register_next_step_handler(message, input_money, target)
        return

    # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ü–µ–ª—å –≤–≤–æ–¥–∞:
    balance = BotDB.get_balance(chat_id)
    key = chat_id

    if target == "bandit":
        if amount > balance:
            bot.send_message(chat_id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            bot.register_next_step_handler(message, input_money, target)
        else:
            bot.send_message(chat_id=chat_id, text=f"–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: {amount}.", reply_markup=ReplyKeyboardRemove())
            spin(message, amount)

    elif target == "blackjack":
        if amount > balance:
            bot.send_message(chat_id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            bot.register_next_step_handler(message, input_money, target)
        else:
            bot.send_message(chat_id=chat_id, text=f"–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: {amount}.", reply_markup=ReplyKeyboardRemove())
            blackjack(message, amount)

    elif target == "roulette":
        if amount > balance:
            bot.send_message(chat_id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            bot.register_next_step_handler(message, input_money, target)
        else:
            bot.send_message(chat_id=chat_id, text=f"–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: {amount}.", reply_markup=ReplyKeyboardRemove())
            roulette(message, amount)

    elif target == "deposit":
        BotDB.add(key, amount)
        set_default_keyboard(chat_id, f"–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {amount}.")


def play_again(message, game_name, bet):
    """–§—É–Ω–∫—Ü–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å—ã–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞"""
    key = message.chat.id
    if BotDB.get_balance(message.chat.id) == 0:
        bot.send_message(message.chat.id, "–ß—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å.")
        start_message(message)
    else:
        keyboard = InlineKeyboardMarkup()
        button1 = InlineKeyboardButton(text="–Ω–µ—Ç", callback_data=f"{game_name} - no")
        button2 = InlineKeyboardButton(text="–Ω–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞", callback_data=f"{game_name} - yes")
        button3 = InlineKeyboardButton(text="—Ç–∞ –∂–µ —Å—Ç–∞–≤–∫–∞", callback_data=f"{game_name} - {bet}#same")
        keyboard.add(button1)
        keyboard.add(button2, button3)

        bot.send_message(chat_id=message.chat.id, text=f"–ë–∞–ª–∞–Ω—Å: {BotDB.get_balance(key)}")
        bot.send_message(chat_id=message.chat.id, text="–°—ã–≥—Ä–∞–µ—Ç–µ —Å–Ω–æ–≤–∞?", reply_markup=keyboard)


def roulette(message, bet):
    """–ó–∞–ø—É—Å–∫ —Ä—É–ª–µ—Ç–∫–∏"""

    BotDB.withdraw(message.chat.id, bet)

    keyboard = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton(text="–º–∞–ª—ã–µ", callback_data="roulette - low")
    button2 = InlineKeyboardButton(text="–±–æ–ª—å—à–∏–µ", callback_data="roulette - high")
    button3 = InlineKeyboardButton(text="–∫—Ä–∞—Å–Ω–æ–µ", callback_data="roulette - red")
    button4 = InlineKeyboardButton(text="—á—ë—Ä–Ω–æ–µ", callback_data="roulette - black")
    button5 = InlineKeyboardButton(text="—á—ë—Ç", callback_data="roulette - even")
    button6 = InlineKeyboardButton(text="–Ω–µ—á–µ—Ç", callback_data="roulette - odd")
    button7 = InlineKeyboardButton(text="–∑–µ—Ä–æ", callback_data="roulette - zero")
    keyboard.add(button7)
    keyboard.add(button1, button2)
    keyboard.add(button3, button4)
    keyboard.add(button5, button6)
    bot.send_message(chat_id=message.chat.id, text="–ù–∞ —á—Ç–æ —Å—Ç–∞–≤–∏—Ç–µ?", reply_markup=keyboard)

    answer = get_chat_data(message.chat.id)['roulette']
    while answer is None:
        time.sleep(1)
        answer = get_chat_data(message.chat.id)['roulette']
    result = random.randint(0, 36)
    bot.send_animation(chat_id=message.chat.id, animation=open(f"roulette/{result}.mp4", 'rb'))
    time.sleep(4)
    bot.send_message(chat_id=message.chat.id, text=f"{result}")
    if answer == "low" and result <= 18:
        bot.send_message(message.chat.id, f"–°—Ç–∞–≤–∫–∞ –ø—Ä–æ—à–ª–∞!")
        bot.send_message(message.chat.id, f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {bet * 2}!")
        BotDB.add(message.chat.id, bet * 2)
    elif answer == "high" and result > 18:
        bot.send_message(message.chat.id, f"–°—Ç–∞–≤–∫–∞ –ø—Ä–æ—à–ª–∞!")
        bot.send_message(message.chat.id, f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {bet * 2}!")
        BotDB.add(message.chat.id, bet * 2)
    elif answer == "red" and result in (32, 19, 21, 25, 34, 27, 36, 30, 23, 5, 16, 1, 14, 9, 18, 7, 12, 3):
        bot.send_message(message.chat.id, f"–°—Ç–∞–≤–∫–∞ –ø—Ä–æ—à–ª–∞!")
        bot.send_message(message.chat.id, f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {bet * 2}!")
        BotDB.add(message.chat.id, bet * 2)
    elif answer == "black" and result not in (32, 19, 21, 25, 34, 27, 36, 30, 23, 5, 16, 1, 14, 9, 18, 7, 12, 3, 0):
        bot.send_message(message.chat.id, f"–°—Ç–∞–≤–∫–∞ –ø—Ä–æ—à–ª–∞!")
        bot.send_message(message.chat.id, f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {bet * 2}!")
        BotDB.add(message.chat.id, bet * 2)
    elif answer == "even" and result % 2 == 0 and result != 0:
        bot.send_message(message.chat.id, f"–°—Ç–∞–≤–∫–∞ –ø—Ä–æ—à–ª–∞!")
        bot.send_message(message.chat.id, f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {bet * 2}!")
        BotDB.add(message.chat.id, bet * 2)
    elif answer == "odd" and result % 2 == 1:
        bot.send_message(message.chat.id, f"–°—Ç–∞–≤–∫–∞ –ø—Ä–æ—à–ª–∞!")
        bot.send_message(message.chat.id, f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {bet * 2}!")
        BotDB.add(message.chat.id, bet * 2)
    elif answer == "zero" and result == 0:
        bot.send_message(message.chat.id, f"–°—Ç–∞–≤–∫–∞ –ø—Ä–æ—à–ª–∞!")
        bot.send_message(message.chat.id, f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {bet * 10}!")
        BotDB.add(message.chat.id, bet * 10)
    else:
        bot.send_message(message.chat.id, f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.")

    get_chat_data(message.chat.id)['roulette'] = None
    play_again(message, "roulette", bet)


def spin(message, bet):
    """–ó–∞–ø—É—Å–∫ '–û–¥–Ω–æ—Ä—É–∫–æ–≥–æ –ë–∞–Ω–¥–∏—Ç–∞'"""

    BotDB.withdraw(message.chat.id, bet)
    combination, win = bandit_game.spin(bet)

    if win != 0:
        bot.send_message(message.chat.id, f"{combination}")
        if combination == "7Ô∏è‚É£ 7Ô∏è‚É£ 7Ô∏è‚É£":
            bot.send_message(message.chat.id, f"–î–∂–µ–∫–ø–æ—Ç: {win}!")
        else:
            bot.send_message(message.chat.id, f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {win}!")
        BotDB.add(message.chat.id, win)
    else:
        bot.send_message(message.chat.id, f"{combination}")
        bot.send_message(message.chat.id, f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.")

    play_again(message, "bandit", bet)


def blackjack(message, bet):
    """–ó–∞–ø—É—Å–∫ –±–ª—ç–∫–¥–∂–µ–∫–∞ –Ω–∞ –æ–¥–Ω–æ–≥–æ"""

    # —Ñ–∏–∫—Å–∏—Ä—É—é —Å—Ç–æ–ª –∏ –∏–≥—Ä–æ–∫–∞:
    key = message.chat.id
    game = Blackjack(bet)
    get_chat_data(key)['blackjack_table'] = game
    player = game.player
    croupier = game.croupier

    BotDB.withdraw(message.chat.id, bet)  # —É–º–µ–Ω—å—à–∞—é –±–∞–ª–∞–Ω—Å

    # –Ω–∞—á–∏–Ω–∞—é —Ä–∞–∑–¥–∞—á—É:
    game.deal()
    bot.send_message(chat_id=message.chat.id, text=game.get_current_state())
    # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –¥–µ–π—Å—Ç–≤–∏—è –∏–≥—Ä–æ–∫–∞:
    while player.status == "in_game":
        action(message)
        player.is_thinking = True
        while player.is_thinking:
            time.sleep(1)
        if player.status != "stop":
            bot.send_message(chat_id=message.chat.id, text=game.get_current_state())

    # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–ø—Ä–æ—Å—Ç–æ –º–Ω–æ–≥–æ if-–æ–≤, –º–æ–∂–Ω–æ –Ω–µ –≤–Ω–∏–∫–∞—Ç—å):
    if player.status == "lose":  # –ø–µ—Ä–µ–±–æ—Ä —É –∏–≥—Ä–æ–∫–∞
        bot.send_message(message.chat.id, f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.")
        play_again(message, "blackjack", bet)

    elif player.has_blackjack:  # –±–ª—ç–∫–¥–∂–µ–∫ —É –∏–≥—Ä–æ–∫–∞
        if croupier.score < 10:  # —Ç–æ—á–Ω–æ –Ω–µ—Ç –±–ª—ç–∫–¥–∂–µ–∫–∞ —É –∫—Ä—É–ø—å–µ
            bot.send_message(message.chat.id, f"–ë–ª—ç–∫–¥–∂–µ–∫! –í—ã –ø–æ–±–µ–¥–∏–ª–∏!")
            bot.send_message(message.chat.id, f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {(player.bet * 5 + 1) // 2}!")
            BotDB.add(message.chat.id, (player.bet * 5 + 1) // 2)
            play_again(message, "blackjack", bet)
        else:  # –≤–æ–∑–º–æ–∂–Ω—ã–π –±–ª—ç–∫–¥–∂–µ–∫ —É –∫—Ä—É–ø—å–µ
            # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ä–µ—à–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞:
            choice(message)
            player.is_thinking = True
            while player.is_thinking:
                time.sleep(1)

            if player.status == "take":
                bot.send_message(message.chat.id, f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {player.bet * 2}!")
                BotDB.add(message.chat.id, player.bet * 2)
                play_again(message, "blackjack", bet)
            elif player.status == "wait":
                game.croupier_finish()
                bot.send_message(chat_id=message.chat.id, text=game.get_current_state())

                if croupier.has_blackjack:
                    bot.send_message(message.chat.id, f"–í—ã –æ—Å—Ç–∞–ª–∏—Å—å –ø—Ä–∏ —Å–≤–æ—ë–º: {player.bet}.")
                    BotDB.add(message.chat.id, player.bet)
                    play_again(message, "blackjack", bet)
                else:
                    bot.send_message(message.chat.id, f"–í—ã –ø–æ–±–µ–¥–∏–ª–∏!")
                    bot.send_message(message.chat.id, f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {(player.bet * 5 + 1) // 2}!")
                    BotDB.add(message.chat.id, (player.bet * 5 + 1) // 2)
                    play_again(message, "blackjack", bet)

    else:  # –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏: –∫–æ–≥–¥–∞ —É –∏–≥—Ä–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –Ω–∞–±–æ—Ä –∫–∞—Ä—Ç –±–µ–∑ –ø–µ—Ä–µ–±–æ—Ä–∞, –∏ –∫—Ä—É–ø—å–µ –Ω–∞—á–∏–Ω–∞–µ—Ç —Å–≤–æ–π –¥–æ–±–æ—Ä
        game.croupier_finish()
        bot.send_message(chat_id=message.chat.id, text=game.get_current_state())
        if croupier.has_blackjack:
            bot.send_message(message.chat.id, f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ - —É –∫—Ä—É–ø—å–µ –±–ª—ç–∫–¥–∂–µ–∫.")
            play_again(message, "blackjack", bet)
        elif (croupier.score < player.score) or (croupier.score > 21):
            bot.send_message(message.chat.id, f"–í—ã –ø–æ–±–µ–¥–∏–ª–∏!")
            bot.send_message(message.chat.id, f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {player.bet * 2}!")
            BotDB.add(message.chat.id, player.bet * 2)
            play_again(message, "blackjack", bet)
        elif croupier.score == player.score:
            bot.send_message(message.chat.id, f"–ù–∏—á—å—è")
            bot.send_message(message.chat.id, f"–í—ã –æ—Å—Ç–∞–ª–∏—Å—å –ø—Ä–∏ —Å–≤–æ—ë–º: {player.bet}.")
            BotDB.add(message.chat.id, player.bet)
            play_again(message, "blackjack", bet)
        else:
            bot.send_message(message.chat.id, f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.")
            play_again(message, "blackjack", bet)


def action(message):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤—ã–±–æ—Ä–æ–º –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –Ω–∞–±–æ—Ä–µ –∫–∞—Ä—Ç –∏–≥—Ä–æ–∫–æ–º"""

    keyboard = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton(text="–≤–∑—è—Ç—å –∫–∞—Ä—Ç—É", callback_data="blackjack - hit")
    button2 = InlineKeyboardButton(text="–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è", callback_data="blackjack - stop")
    keyboard.add(button1, button2)
    bot.send_message(chat_id=message.chat.id, text="–í–∞—à —Ö–æ–¥.", reply_markup=keyboard)


def choice(message):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤—ã–±–æ—Ä–æ–º –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –±–ª—ç–∫–¥–∂–µ–∫–µ —É –∏–≥—Ä–æ–∫–∞"""

    keyboard = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton(text="–∑–∞–±—Ä–∞—Ç—å —Å–µ–π—á–∞—Å", callback_data="blackjack - no risk")
    button2 = InlineKeyboardButton(text="–∏–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ", callback_data="blackjack - risk")
    keyboard.add(button1, button2)
    bot.send_message(chat_id=message.chat.id, text=messages.decision, reply_markup=keyboard)


# –∑–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞
bot.polling()
